[gd_scene load_steps=6 format=2]

[ext_resource path="res://scenes/Enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/Hero.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/Obstacle.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/Ground.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var MoveMarker = preload(\"res://scenes/MoveMarker.tscn\")
var Enemy = preload(\"res://scenes/Enemy.tscn\")
var has_player_moved = false
onready var hero_attack_cooldown = $Hero/AttackCooldown
onready var attack_timer_progress = $HUD/AttackTimerProgress
onready var m = MoveMarker.instance()
onready var enemy = $Enemy
onready var enemy_dupe = enemy.duplicate()
var enemy_starting_pos: Vector2 = Vector2(752, 280)
var t

func _ready() -> void:
	attack_timer_progress.max_value = hero_attack_cooldown.wait_time
	attack_timer_progress.value = hero_attack_cooldown.time_left
	enemy_dupe.position = enemy_starting_pos
	t = Timer.new()
	t.set_wait_time(1)
	t.set_one_shot(true)
	self.add_child(t)

func _process(delta: float) -> void:
	attack_timer_progress.value = \\
	attack_timer_progress.max_value - hero_attack_cooldown.time_left

func _on_Hero_moved(target_pos: Vector2) -> void:
	m.position = target_pos
	if not has_player_moved:
		add_child(m)
		has_player_moved = true

func _on_Enemy_died() -> void:
	t.start()
	yield(t, \"timeout\")
	add_child(enemy_dupe.duplicate())
"

[node name="Main" type="Node2D"]
script = SubResource( 1 )

[node name="Hero" parent="." instance=ExtResource( 2 )]
position = Vector2( 336, 288 )
z_index = 1

[node name="Enemy" parent="." instance=ExtResource( 1 )]
position = Vector2( 752, 280 )
z_index = 1

[node name="TileMap" parent="." instance=ExtResource( 4 )]

[node name="Obstacle" parent="." instance=ExtResource( 3 )]
modulate = Color( 0.478431, 0.247059, 0, 1 )

[node name="HUD" type="CanvasLayer" parent="."]

[node name="AttackTimerProgress" type="ProgressBar" parent="HUD"]
margin_right = 200.0
margin_bottom = 48.0
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="moved" from="Hero" to="." method="_on_Hero_moved"]
[connection signal="attack_clicked_on" from="Enemy" to="Hero" method="_on_Enemy_attack_clicked_on"]
[connection signal="died" from="Enemy" to="Hero" method="_on_Enemy_died"]
[connection signal="died" from="Enemy" to="." method="_on_Enemy_died"]
